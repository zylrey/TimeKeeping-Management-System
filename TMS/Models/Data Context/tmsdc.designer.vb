'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="tmsdb")>  _
Partial Public Class tmsdcDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertt_course(instance As t_course)
    End Sub
  Partial Private Sub Updatet_course(instance As t_course)
    End Sub
  Partial Private Sub Deletet_course(instance As t_course)
    End Sub
  Partial Private Sub Insertt_scan(instance As t_scan)
    End Sub
  Partial Private Sub Updatet_scan(instance As t_scan)
    End Sub
  Partial Private Sub Deletet_scan(instance As t_scan)
    End Sub
  Partial Private Sub Insertt_section(instance As t_section)
    End Sub
  Partial Private Sub Updatet_section(instance As t_section)
    End Sub
  Partial Private Sub Deletet_section(instance As t_section)
    End Sub
  Partial Private Sub Insertt_student(instance As t_student)
    End Sub
  Partial Private Sub Updatet_student(instance As t_student)
    End Sub
  Partial Private Sub Deletet_student(instance As t_student)
    End Sub
  Partial Private Sub Insertt_user(instance As t_user)
    End Sub
  Partial Private Sub Updatet_user(instance As t_user)
    End Sub
  Partial Private Sub Deletet_user(instance As t_user)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.TMS.My.MySettings.Default.tmsdbConnectionString2, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property t_courses() As System.Data.Linq.Table(Of t_course)
		Get
			Return Me.GetTable(Of t_course)
		End Get
	End Property
	
	Public ReadOnly Property t_scans() As System.Data.Linq.Table(Of t_scan)
		Get
			Return Me.GetTable(Of t_scan)
		End Get
	End Property
	
	Public ReadOnly Property t_sections() As System.Data.Linq.Table(Of t_section)
		Get
			Return Me.GetTable(Of t_section)
		End Get
	End Property
	
	Public ReadOnly Property t_students() As System.Data.Linq.Table(Of t_student)
		Get
			Return Me.GetTable(Of t_student)
		End Get
	End Property
	
	Public ReadOnly Property t_users() As System.Data.Linq.Table(Of t_user)
		Get
			Return Me.GetTable(Of t_user)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.t_course")>  _
Partial Public Class t_course
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _c_id As Integer
	
	Private _name As String
	
	Private _datecreated As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onc_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onc_idChanged()
    End Sub
    Partial Private Sub OnnameChanging(value As String)
    End Sub
    Partial Private Sub OnnameChanged()
    End Sub
    Partial Private Sub OndatecreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatecreatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_c_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property c_id() As Integer
		Get
			Return Me._c_id
		End Get
		Set
			If ((Me._c_id = value)  _
						= false) Then
				Me.Onc_idChanging(value)
				Me.SendPropertyChanging
				Me._c_id = value
				Me.SendPropertyChanged("c_id")
				Me.Onc_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_name", DbType:="VarChar(50)")>  _
	Public Property name() As String
		Get
			Return Me._name
		End Get
		Set
			If (String.Equals(Me._name, value) = false) Then
				Me.OnnameChanging(value)
				Me.SendPropertyChanging
				Me._name = value
				Me.SendPropertyChanged("name")
				Me.OnnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datecreated", DbType:="Date")>  _
	Public Property datecreated() As System.Nullable(Of Date)
		Get
			Return Me._datecreated
		End Get
		Set
			If (Me._datecreated.Equals(value) = false) Then
				Me.OndatecreatedChanging(value)
				Me.SendPropertyChanging
				Me._datecreated = value
				Me.SendPropertyChanged("datecreated")
				Me.OndatecreatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.t_scan")>  _
Partial Public Class t_scan
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _t_id As Integer
	
	Private _s_uid As System.Nullable(Of Integer)
	
	Private _fullname As String
	
	Private _attenddate As System.Nullable(Of Date)
	
	Private _intime As System.Nullable(Of System.TimeSpan)
	
	Private _instatus As String
	
	Private _outtime As System.Nullable(Of System.TimeSpan)
	
	Private _outstatus As String
	
	Private _totalHours As System.Nullable(Of System.TimeSpan)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ont_idChanging(value As Integer)
    End Sub
    Partial Private Sub Ont_idChanged()
    End Sub
    Partial Private Sub Ons_uidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ons_uidChanged()
    End Sub
    Partial Private Sub OnfullnameChanging(value As String)
    End Sub
    Partial Private Sub OnfullnameChanged()
    End Sub
    Partial Private Sub OnattenddateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnattenddateChanged()
    End Sub
    Partial Private Sub OnintimeChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnintimeChanged()
    End Sub
    Partial Private Sub OninstatusChanging(value As String)
    End Sub
    Partial Private Sub OninstatusChanged()
    End Sub
    Partial Private Sub OnouttimeChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OnouttimeChanged()
    End Sub
    Partial Private Sub OnoutstatusChanging(value As String)
    End Sub
    Partial Private Sub OnoutstatusChanged()
    End Sub
    Partial Private Sub OntotalHoursChanging(value As System.Nullable(Of System.TimeSpan))
    End Sub
    Partial Private Sub OntotalHoursChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_t_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property t_id() As Integer
		Get
			Return Me._t_id
		End Get
		Set
			If ((Me._t_id = value)  _
						= false) Then
				Me.Ont_idChanging(value)
				Me.SendPropertyChanging
				Me._t_id = value
				Me.SendPropertyChanged("t_id")
				Me.Ont_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_s_uid", DbType:="Int")>  _
	Public Property s_uid() As System.Nullable(Of Integer)
		Get
			Return Me._s_uid
		End Get
		Set
			If (Me._s_uid.Equals(value) = false) Then
				Me.Ons_uidChanging(value)
				Me.SendPropertyChanging
				Me._s_uid = value
				Me.SendPropertyChanged("s_uid")
				Me.Ons_uidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fullname", DbType:="VarChar(50)")>  _
	Public Property fullname() As String
		Get
			Return Me._fullname
		End Get
		Set
			If (String.Equals(Me._fullname, value) = false) Then
				Me.OnfullnameChanging(value)
				Me.SendPropertyChanging
				Me._fullname = value
				Me.SendPropertyChanged("fullname")
				Me.OnfullnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_attenddate", DbType:="Date")>  _
	Public Property attenddate() As System.Nullable(Of Date)
		Get
			Return Me._attenddate
		End Get
		Set
			If (Me._attenddate.Equals(value) = false) Then
				Me.OnattenddateChanging(value)
				Me.SendPropertyChanging
				Me._attenddate = value
				Me.SendPropertyChanged("attenddate")
				Me.OnattenddateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_intime", DbType:="Time")>  _
	Public Property intime() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._intime
		End Get
		Set
			If (Me._intime.Equals(value) = false) Then
				Me.OnintimeChanging(value)
				Me.SendPropertyChanging
				Me._intime = value
				Me.SendPropertyChanged("intime")
				Me.OnintimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_instatus", DbType:="VarChar(50)")>  _
	Public Property instatus() As String
		Get
			Return Me._instatus
		End Get
		Set
			If (String.Equals(Me._instatus, value) = false) Then
				Me.OninstatusChanging(value)
				Me.SendPropertyChanging
				Me._instatus = value
				Me.SendPropertyChanged("instatus")
				Me.OninstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_outtime", DbType:="Time")>  _
	Public Property outtime() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._outtime
		End Get
		Set
			If (Me._outtime.Equals(value) = false) Then
				Me.OnouttimeChanging(value)
				Me.SendPropertyChanging
				Me._outtime = value
				Me.SendPropertyChanged("outtime")
				Me.OnouttimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_outstatus", DbType:="VarChar(50)")>  _
	Public Property outstatus() As String
		Get
			Return Me._outstatus
		End Get
		Set
			If (String.Equals(Me._outstatus, value) = false) Then
				Me.OnoutstatusChanging(value)
				Me.SendPropertyChanging
				Me._outstatus = value
				Me.SendPropertyChanged("outstatus")
				Me.OnoutstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_totalHours", DbType:="Time")>  _
	Public Property totalHours() As System.Nullable(Of System.TimeSpan)
		Get
			Return Me._totalHours
		End Get
		Set
			If (Me._totalHours.Equals(value) = false) Then
				Me.OntotalHoursChanging(value)
				Me.SendPropertyChanging
				Me._totalHours = value
				Me.SendPropertyChanged("totalHours")
				Me.OntotalHoursChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.t_section")>  _
Partial Public Class t_section
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _sec_id As Integer
	
	Private _name As String
	
	Private _datecreated As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onsec_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onsec_idChanged()
    End Sub
    Partial Private Sub OnnameChanging(value As String)
    End Sub
    Partial Private Sub OnnameChanged()
    End Sub
    Partial Private Sub OndatecreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatecreatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sec_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property sec_id() As Integer
		Get
			Return Me._sec_id
		End Get
		Set
			If ((Me._sec_id = value)  _
						= false) Then
				Me.Onsec_idChanging(value)
				Me.SendPropertyChanging
				Me._sec_id = value
				Me.SendPropertyChanged("sec_id")
				Me.Onsec_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_name", DbType:="VarChar(50)")>  _
	Public Property name() As String
		Get
			Return Me._name
		End Get
		Set
			If (String.Equals(Me._name, value) = false) Then
				Me.OnnameChanging(value)
				Me.SendPropertyChanging
				Me._name = value
				Me.SendPropertyChanged("name")
				Me.OnnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datecreated", DbType:="Date")>  _
	Public Property datecreated() As System.Nullable(Of Date)
		Get
			Return Me._datecreated
		End Get
		Set
			If (Me._datecreated.Equals(value) = false) Then
				Me.OndatecreatedChanging(value)
				Me.SendPropertyChanging
				Me._datecreated = value
				Me.SendPropertyChanged("datecreated")
				Me.OndatecreatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.t_students")>  _
Partial Public Class t_student
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _s_id As Integer
	
	Private _s_uid As System.Nullable(Of Integer)
	
	Private _firstname As String
	
	Private _middlename As String
	
	Private _lastname As String
	
	Private _course As String
	
	Private _section As String
	
	Private _datecreated As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ons_idChanging(value As Integer)
    End Sub
    Partial Private Sub Ons_idChanged()
    End Sub
    Partial Private Sub Ons_uidChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ons_uidChanged()
    End Sub
    Partial Private Sub OnfirstnameChanging(value As String)
    End Sub
    Partial Private Sub OnfirstnameChanged()
    End Sub
    Partial Private Sub OnmiddlenameChanging(value As String)
    End Sub
    Partial Private Sub OnmiddlenameChanged()
    End Sub
    Partial Private Sub OnlastnameChanging(value As String)
    End Sub
    Partial Private Sub OnlastnameChanged()
    End Sub
    Partial Private Sub OncourseChanging(value As String)
    End Sub
    Partial Private Sub OncourseChanged()
    End Sub
    Partial Private Sub OnsectionChanging(value As String)
    End Sub
    Partial Private Sub OnsectionChanged()
    End Sub
    Partial Private Sub OndatecreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatecreatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_s_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property s_id() As Integer
		Get
			Return Me._s_id
		End Get
		Set
			If ((Me._s_id = value)  _
						= false) Then
				Me.Ons_idChanging(value)
				Me.SendPropertyChanging
				Me._s_id = value
				Me.SendPropertyChanged("s_id")
				Me.Ons_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_s_uid", DbType:="Int")>  _
	Public Property s_uid() As System.Nullable(Of Integer)
		Get
			Return Me._s_uid
		End Get
		Set
			If (Me._s_uid.Equals(value) = false) Then
				Me.Ons_uidChanging(value)
				Me.SendPropertyChanging
				Me._s_uid = value
				Me.SendPropertyChanged("s_uid")
				Me.Ons_uidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_firstname", DbType:="VarChar(50)")>  _
	Public Property firstname() As String
		Get
			Return Me._firstname
		End Get
		Set
			If (String.Equals(Me._firstname, value) = false) Then
				Me.OnfirstnameChanging(value)
				Me.SendPropertyChanging
				Me._firstname = value
				Me.SendPropertyChanged("firstname")
				Me.OnfirstnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_middlename", DbType:="VarChar(50)")>  _
	Public Property middlename() As String
		Get
			Return Me._middlename
		End Get
		Set
			If (String.Equals(Me._middlename, value) = false) Then
				Me.OnmiddlenameChanging(value)
				Me.SendPropertyChanging
				Me._middlename = value
				Me.SendPropertyChanged("middlename")
				Me.OnmiddlenameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lastname", DbType:="VarChar(50)")>  _
	Public Property lastname() As String
		Get
			Return Me._lastname
		End Get
		Set
			If (String.Equals(Me._lastname, value) = false) Then
				Me.OnlastnameChanging(value)
				Me.SendPropertyChanging
				Me._lastname = value
				Me.SendPropertyChanged("lastname")
				Me.OnlastnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_course", DbType:="VarChar(50)")>  _
	Public Property course() As String
		Get
			Return Me._course
		End Get
		Set
			If (String.Equals(Me._course, value) = false) Then
				Me.OncourseChanging(value)
				Me.SendPropertyChanging
				Me._course = value
				Me.SendPropertyChanged("course")
				Me.OncourseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_section", DbType:="VarChar(50)")>  _
	Public Property section() As String
		Get
			Return Me._section
		End Get
		Set
			If (String.Equals(Me._section, value) = false) Then
				Me.OnsectionChanging(value)
				Me.SendPropertyChanging
				Me._section = value
				Me.SendPropertyChanged("section")
				Me.OnsectionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datecreated", DbType:="Date")>  _
	Public Property datecreated() As System.Nullable(Of Date)
		Get
			Return Me._datecreated
		End Get
		Set
			If (Me._datecreated.Equals(value) = false) Then
				Me.OndatecreatedChanging(value)
				Me.SendPropertyChanging
				Me._datecreated = value
				Me.SendPropertyChanged("datecreated")
				Me.OndatecreatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.t_user")>  _
Partial Public Class t_user
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _u_id As Integer
	
	Private _username As String
	
	Private _password As String
	
	Private _ulevel As String
	
	Private _active As System.Nullable(Of Integer)
	
	Private _datecreated As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onu_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onu_idChanged()
    End Sub
    Partial Private Sub OnusernameChanging(value As String)
    End Sub
    Partial Private Sub OnusernameChanged()
    End Sub
    Partial Private Sub OnpasswordChanging(value As String)
    End Sub
    Partial Private Sub OnpasswordChanged()
    End Sub
    Partial Private Sub OnulevelChanging(value As String)
    End Sub
    Partial Private Sub OnulevelChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub OndatecreatedChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatecreatedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_u_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property u_id() As Integer
		Get
			Return Me._u_id
		End Get
		Set
			If ((Me._u_id = value)  _
						= false) Then
				Me.Onu_idChanging(value)
				Me.SendPropertyChanging
				Me._u_id = value
				Me.SendPropertyChanged("u_id")
				Me.Onu_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_username", DbType:="VarChar(50)")>  _
	Public Property username() As String
		Get
			Return Me._username
		End Get
		Set
			If (String.Equals(Me._username, value) = false) Then
				Me.OnusernameChanging(value)
				Me.SendPropertyChanging
				Me._username = value
				Me.SendPropertyChanged("username")
				Me.OnusernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_password", DbType:="VarChar(50)")>  _
	Public Property password() As String
		Get
			Return Me._password
		End Get
		Set
			If (String.Equals(Me._password, value) = false) Then
				Me.OnpasswordChanging(value)
				Me.SendPropertyChanging
				Me._password = value
				Me.SendPropertyChanged("password")
				Me.OnpasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ulevel", DbType:="VarChar(50)")>  _
	Public Property ulevel() As String
		Get
			Return Me._ulevel
		End Get
		Set
			If (String.Equals(Me._ulevel, value) = false) Then
				Me.OnulevelChanging(value)
				Me.SendPropertyChanging
				Me._ulevel = value
				Me.SendPropertyChanged("ulevel")
				Me.OnulevelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="Int")>  _
	Public Property active() As System.Nullable(Of Integer)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datecreated", DbType:="Date")>  _
	Public Property datecreated() As System.Nullable(Of Date)
		Get
			Return Me._datecreated
		End Get
		Set
			If (Me._datecreated.Equals(value) = false) Then
				Me.OndatecreatedChanging(value)
				Me.SendPropertyChanging
				Me._datecreated = value
				Me.SendPropertyChanged("datecreated")
				Me.OndatecreatedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
